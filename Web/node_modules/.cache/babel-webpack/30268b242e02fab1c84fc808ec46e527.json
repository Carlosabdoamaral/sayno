{"ast":null,"code":"// import { Component } from '@angular/core';\n// import { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/compat/firestore';\n// import { Observable } from 'rxjs';\nimport { __decorate } from \"tslib\";\nlet ContactComponent = class ContactComponent {\n  constructor(afs) {\n    this.afs = afs;\n    this.missingTitle = false;\n    this.missingDesc = false;\n    this.isOk = false;\n    this.contactCol = afs.collection('contact');\n  }\n\n  ngOnInit() {}\n\n  post() {\n    var _a, _b, _c;\n\n    const title = (_a = this.title) === null || _a === void 0 ? void 0 : _a.nativeElement.value;\n    const desc = (_b = this.title) === null || _b === void 0 ? void 0 : _b.nativeElement.value;\n    const date = new Date();\n    (_c = this.contactCol) === null || _c === void 0 ? void 0 : _c.set({\n      \"title\": title,\n      \"description\": desc\n    }); // if (title && desc) {\n    //   this.isOk = true;\n    // }\n    // else {\n    //   this.isOk = false;\n    // }\n  }\n\n};\n\n__decorate([ViewChild('title')], ContactComponent.prototype, \"title\", void 0);\n\n__decorate([ViewChild('desc')], ContactComponent.prototype, \"desc\", void 0);\n\nContactComponent = __decorate([Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.less']\n})], ContactComponent);\nexport { ContactComponent }; // import { Component } from '@angular/core';\n// import { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/compat/firestore';\n// import { Observable } from 'rxjs';\n// export interface Item { name: string; }\n// @Component({\n//   selector: 'app-root',\n//   template: `\n//     <ul>\n//       <li *ngFor=\"let item of items | async\">\n//         {{ item.name }}\n//       </li>\n//     </ul>\n//   `\n// })\n// export class AppComponent {\n//   private itemsCollection: AngularFirestoreCollection<Item>;\n//   items: Observable<Item[]>;\n//   constructor(private afs: AngularFirestore) {\n//     this.itemsCollection = afs.collection<Item>('items');\n//     this.items = this.itemsCollection.valueChanges();\n//   }\n//   addItem(item: Item) {\n//     this.itemsCollection.add(item);\n//   }\n// }","map":{"version":3,"sources":["/Users/jcamaral/Desktop/amaralThings/SayNo/Web/src/app/views/contact/contact.component.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AAYA,IAAa,gBAAgB,GAA7B,MAAa,gBAAb,CAA6B;AAQ3B,EAAA,WAAA,CAAoB,GAApB,EAAyC;AAArB,SAAA,GAAA,GAAA,GAAA;AANpB,SAAA,YAAA,GAAyB,KAAzB;AACA,SAAA,WAAA,GAAwB,KAAxB;AACA,SAAA,IAAA,GAAiB,KAAjB;AAKE,SAAK,UAAL,GAAkB,GAAG,CAAC,UAAJ,CAAe,SAAf,CAAlB;AACD;;AAED,EAAA,QAAQ,GAAA,CACP;;AAED,EAAA,IAAI,GAAA;;;AACF,UAAM,KAAK,GAAG,CAAA,EAAA,GAAA,KAAK,KAAL,MAAU,IAAV,IAAU,EAAA,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAU,EAAA,CAAE,aAAF,CAAgB,KAAxC;AACA,UAAM,IAAI,GAAG,CAAA,EAAA,GAAA,KAAK,KAAL,MAAU,IAAV,IAAU,EAAA,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAU,EAAA,CAAE,aAAF,CAAgB,KAAvC;AACA,UAAM,IAAI,GAAG,IAAI,IAAJ,EAAb;AACA,KAAA,EAAA,GAAA,KAAK,UAAL,MAAe,IAAf,IAAe,EAAA,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAe,EAAA,CAAE,GAAF,CAAM;AAAC,eAAS,KAAV;AAAiB,qBAAe;AAAhC,KAAN,CAAf,CAJE,CAMF;AACA;AACA;AACA;AACA;AACA;AACD;;AA3B0B,CAA7B;;AAKsB,UAAA,CAAA,CAAnB,SAAS,CAAC,OAAD,CAAU,CAAA,E,0BAAA,E,OAAA,E,KAA6B,CAA7B,CAAA;;AACD,UAAA,CAAA,CAAlB,SAAS,CAAC,MAAD,CAAS,CAAA,E,0BAAA,E,MAAA,E,KAA4B,CAA5B,CAAA;;AANR,gBAAgB,GAAA,UAAA,CAAA,CAL5B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,aADD;AAET,EAAA,WAAW,EAAE,0BAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,0BAAD;AAHF,CAAD,CAKmB,CAAA,EAAhB,gBAAgB,CAAhB;SAAA,gB,IA8Bb;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { Component } from '@angular/core';\n// import { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/compat/firestore';\n// import { Observable } from 'rxjs';\n\nexport interface Contact {\n  title : String,\n  description : String\n}\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.less']\n})\nexport class ContactComponent {\n  private contactCol: AngularFirestoreDocument | undefined;\n  missingTitle : Boolean = false;\n  missingDesc : Boolean = false;\n  isOk : Boolean = false;\n  @ViewChild('title') title: ElementRef | undefined\n  @ViewChild('desc') desc: ElementRef | undefined\n\n  constructor(private afs: AngularFirestore){\n    this.contactCol = afs.collection('contact')\n  }\n\n  ngOnInit(): void {\n  }\n\n  post() {\n    const title = this.title?.nativeElement.value;\n    const desc = this.title?.nativeElement.value;\n    const date = new Date\n    this.contactCol?.set({\"title\": title, \"description\": desc})\n\n    // if (title && desc) {\n    //   this.isOk = true;\n    // }\n    // else {\n    //   this.isOk = false;\n    // }\n  }\n}\n\n// import { Component } from '@angular/core';\n// import { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/compat/firestore';\n// import { Observable } from 'rxjs';\n\n// export interface Item { name: string; }\n\n// @Component({\n//   selector: 'app-root',\n//   template: `\n//     <ul>\n//       <li *ngFor=\"let item of items | async\">\n//         {{ item.name }}\n//       </li>\n//     </ul>\n//   `\n// })\n// export class AppComponent {\n//   private itemsCollection: AngularFirestoreCollection<Item>;\n//   items: Observable<Item[]>;\n//   constructor(private afs: AngularFirestore) {\n//     this.itemsCollection = afs.collection<Item>('items');\n//     this.items = this.itemsCollection.valueChanges();\n//   }\n//   addItem(item: Item) {\n//     this.itemsCollection.add(item);\n//   }\n// }"],"sourceRoot":""},"metadata":{},"sourceType":"module"}